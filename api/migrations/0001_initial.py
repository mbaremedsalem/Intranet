# Generated by Django 4.2.3 on 2024-06-11 09:51

import api.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserAub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('nom', models.CharField(blank=True, max_length=50)),
                ('prenom', models.CharField(blank=True, max_length=50)),
                ('phone', models.CharField(max_length=16)),
                ('username', models.CharField(max_length=16, null=True, unique=True)),
                ('email', models.EmailField(blank=True, max_length=50)),
                ('address', models.CharField(max_length=200)),
                ('post', models.CharField(max_length=200, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=api.models.image_uoload_profile_agent)),
                ('is_active', models.BooleanField(default=True)),
                ('verified', models.BooleanField(default=False)),
                ('restricted', models.BooleanField(default=False)),
                ('deleted', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('role', models.CharField(choices=[('Admin', 'Admin'), ('Agent', 'Agent')], default='Admin', max_length=30, null=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_blocked', models.BooleanField(default=False)),
                ('number_attempt', models.IntegerField(default=0)),
                ('first_login', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Archive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, null=True)),
                ('date_ajout', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Direction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, null=True)),
                ('code', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('useraub_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('direction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.direction')),
            ],
            options={
                'abstract': False,
            },
            bases=('api.useraub',),
        ),
        migrations.CreateModel(
            name='TextGouvernance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200, null=True)),
                ('description', models.CharField(max_length=400, null=True)),
                ('date', models.DateTimeField(auto_now=True, null=True)),
                ('file', models.FileField(null=True, upload_to=api.models.uoload_document, validators=[api.models.validate_file_size])),
                ('user', models.ManyToManyField(related_name='gouvernance_users', to=settings.AUTH_USER_MODEL)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.admin')),
            ],
        ),
        migrations.CreateModel(
            name='procedur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200, null=True)),
                ('description', models.CharField(max_length=400, null=True)),
                ('date', models.DateTimeField(auto_now=True, null=True)),
                ('file', models.FileField(null=True, upload_to=api.models.uoload_document, validators=[api.models.validate_file_size])),
                ('user', models.ManyToManyField(related_name='procedure_users', to=settings.AUTH_USER_MODEL)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.admin')),
            ],
        ),
        migrations.CreateModel(
            name='plotique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200, null=True)),
                ('description', models.CharField(max_length=400, null=True)),
                ('code', models.CharField(default=api.models.generate_unique_plotique_code, editable=False, max_length=100, null=True)),
                ('date', models.DateTimeField(auto_now=True, null=True)),
                ('file', models.FileField(null=True, upload_to=api.models.uoload_document, validators=[api.models.validate_file_size])),
                ('user', models.ManyToManyField(related_name='plotique_users', to=settings.AUTH_USER_MODEL)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.admin')),
            ],
        ),
        migrations.CreateModel(
            name='note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200, null=True)),
                ('description', models.CharField(max_length=400, null=True)),
                ('code', models.CharField(default=api.models.generate_unique_note_code, editable=False, max_length=100, null=True)),
                ('date', models.DateTimeField(auto_now=True, null=True)),
                ('file', models.FileField(null=True, upload_to=api.models.uoload_document, validators=[api.models.validate_file_size])),
                ('user', models.ManyToManyField(related_name='notes_users', to=settings.AUTH_USER_MODEL)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.admin')),
            ],
        ),
        migrations.CreateModel(
            name='Documents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sujet', models.CharField(max_length=100, null=True)),
                ('code', models.CharField(default=api.models.generate_unique_code, editable=False, max_length=100, null=True)),
                ('description', models.TextField(max_length=400, null=True)),
                ('file', models.FileField(null=True, upload_to=api.models.uoload_document, validators=[api.models.validate_file_size])),
                ('date_ajout', models.DateTimeField(auto_now=True, null=True)),
                ('archives', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.archive')),
                ('direction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.direction')),
                ('admin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.admin')),
            ],
        ),
        migrations.CreateModel(
            name='decision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200, null=True)),
                ('description', models.CharField(max_length=400, null=True)),
                ('code', models.CharField(default=api.models.generate_unique_decision_code, editable=False, max_length=100, null=True)),
                ('date', models.DateTimeField(auto_now=True, null=True)),
                ('file', models.FileField(null=True, upload_to=api.models.uoload_document, validators=[api.models.validate_file_size])),
                ('user', models.ManyToManyField(related_name='decision_users', to=settings.AUTH_USER_MODEL)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.admin')),
            ],
        ),
        migrations.CreateModel(
            name='charts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200, null=True)),
                ('description', models.CharField(max_length=400, null=True)),
                ('code', models.CharField(default=api.models.generate_unique_decision_code, editable=False, max_length=100, null=True)),
                ('date', models.DateTimeField(auto_now=True, null=True)),
                ('file', models.FileField(null=True, upload_to=api.models.uoload_document, validators=[api.models.validate_file_size])),
                ('user', models.ManyToManyField(related_name='chartes_users', to=settings.AUTH_USER_MODEL)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.admin')),
            ],
        ),
        migrations.CreateModel(
            name='Avis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200, null=True)),
                ('description', models.CharField(max_length=500, null=True)),
                ('date', models.DateTimeField(auto_now=True, null=True)),
                ('file', models.FileField(null=True, upload_to=api.models.uoload_document, validators=[api.models.validate_file_size])),
                ('user', models.ManyToManyField(related_name='avis_users', to=settings.AUTH_USER_MODEL)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.admin')),
            ],
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('useraub_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('direction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.direction')),
            ],
            options={
                'abstract': False,
            },
            bases=('api.useraub',),
        ),
    ]
